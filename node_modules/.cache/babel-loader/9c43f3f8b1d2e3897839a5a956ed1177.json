{"ast":null,"code":"import _classCallCheck from \"/home/parker-bartlett/wcci/code/rehab-application/rehab-app-front-end-user/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/parker-bartlett/wcci/code/rehab-application/rehab-app-front-end-user/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/parker-bartlett/wcci/code/rehab-application/rehab-app-front-end-user/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/parker-bartlett/wcci/code/rehab-application/rehab-app-front-end-user/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/parker-bartlett/wcci/code/rehab-application/rehab-app-front-end-user/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/parker-bartlett/wcci/code/rehab-application/rehab-app-front-end-user/src/components/ProgressChart.js\";\nimport React, { Component } from 'react';\nimport { Line } from 'react-chartjs'; //let LineChart = require('react-chartjs').Line\n\nvar ProgressChart =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ProgressChart, _Component);\n\n  function ProgressChart() {\n    _classCallCheck(this, ProgressChart);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ProgressChart).apply(this, arguments));\n  }\n\n  _createClass(ProgressChart, [{\n    key: \"render\",\n    // constructor(props) {\n    //     super(props)\n    //     this.state = {\n    //         // type: 'line',\n    //         // data: {\n    //         //     //labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],\n    //         //     datasets: [{\n    //         //         label: 'Users Progress',\n    //         //         data: this.props.sums,\n    //         //         backgroundColor: [\n    //         //             'rgba(255, 99, 132, 0.2)',\n    //         //             'rgba(54, 162, 235, 0.2)',\n    //         //             'rgba(255, 206, 86, 0.2)',\n    //         //             'rgba(75, 192, 192, 0.2)',\n    //         //             'rgba(153, 102, 255, 0.2)',\n    //         //             'rgba(255, 159, 64, 0.2)'\n    //         //         ],\n    //         //         borderColor: [\n    //         //             'rgba(255, 99, 132, 1)',\n    //         //             'rgba(54, 162, 235, 1)',\n    //         //             'rgba(255, 206, 86, 1)',\n    //         //             'rgba(75, 192, 192, 1)',\n    //         //             'rgba(153, 102, 255, 1)',\n    //         //             'rgba(255, 159, 64, 1)'\n    //         //         ],\n    //         //         borderWidth: 1\n    //         //     }]\n    //         // },\n    //         data:  {\n    //             labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\"],\n    //             datasets: [\n    //                 {\n    //                     label: \"My First dataset\",\n    //                     fillColor: \"rgba(220,220,220,0.2)\",\n    //                     strokeColor: \"rgba(220,220,220,1)\",\n    //                     pointColor: \"rgba(220,220,220,1)\",\n    //                     pointStrokeColor: \"#fff\",\n    //                     pointHighlightFill: \"#fff\",\n    //                     pointHighlightStroke: \"rgba(220,220,220,1)\",\n    //                     data: this.props.sums\n    //                 },\n    //             ]\n    //         },\n    //         options: {\n    //             scales: {\n    //                 yAxes: [{\n    //                     ticks: {\n    //                         beginAtZero: true\n    //                     }\n    //                 }]\n    //             }\n    //         },\n    //         chartStyle: {\n    //             width: '100',\n    //             height: '100'\n    //         }\n    //     }\n    // }\n    // componentWillReceiveProps(nextProps) {\n    //     // const someData = {...this.state.data.datasets[0].data}\n    //     // booho = nextProps.sums\n    //     //     this.setState({booho});\n    //     //this.setState({updated: nextProps.updated});\n    //     this.setState({ data: { datasets: [{ data: nextProps.sums }] } })\n    //     // const ctx = document.getElementById('myChart');\n    //     // new Chart(ctx, this.state)\n    // }\n    // componentDidMount() {\n    // }\n    value: function render() {\n      var data = {\n        labels: this.props.survey.surveys.map(function (survey) {\n          return survey.date;\n        }),\n        datasets: [{\n          label: \"My First dataset\",\n          fillColor: \"green\",\n          strokeColor: \"rgba(220,220,220,1)\",\n          pointColor: \"rgba(220,220,220,1)\",\n          pointStrokeColor: \"#fff\",\n          pointHighlightFill: \"#fff\",\n          pointHighlightStroke: \"rgba(220,220,220,1)\",\n          data: this.props.survey.sums\n        }]\n      };\n      return React.createElement(Line, {\n        data: data,\n        redraw: true,\n        width: \"600\",\n        height: \"250\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return ProgressChart;\n}(Component);\n\nexport { ProgressChart as default };","map":{"version":3,"sources":["/home/parker-bartlett/wcci/code/rehab-application/rehab-app-front-end-user/src/components/ProgressChart.js"],"names":["React","Component","Line","ProgressChart","data","labels","props","survey","surveys","map","date","datasets","label","fillColor","strokeColor","pointColor","pointStrokeColor","pointHighlightFill","pointHighlightStroke","sums"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,IAAR,QAAmB,eAAnB,C,CACA;;IAGqBC,a;;;;;;;;;;;;;AAEjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;6BAES;AAEL,UAAIC,IAAI,GAAG;AACPC,QAAAA,MAAM,EAAE,KAAKC,KAAL,CAAWC,MAAX,CAAkBC,OAAlB,CAA0BC,GAA1B,CAA8B,UAAAF,MAAM,EAAI;AAC7C,iBAAOA,MAAM,CAACG,IAAd;AACF,SAFO,CADD;AAIPC,QAAAA,QAAQ,EAAE,CACN;AACIC,UAAAA,KAAK,EAAE,kBADX;AAEIC,UAAAA,SAAS,EAAE,OAFf;AAGIC,UAAAA,WAAW,EAAE,qBAHjB;AAIIC,UAAAA,UAAU,EAAE,qBAJhB;AAKIC,UAAAA,gBAAgB,EAAE,MALtB;AAMIC,UAAAA,kBAAkB,EAAE,MANxB;AAOIC,UAAAA,oBAAoB,EAAE,qBAP1B;AAQId,UAAAA,IAAI,EAAE,KAAKE,KAAL,CAAWC,MAAX,CAAkBY;AAR5B,SADM;AAJH,OAAX;AAkBA,aAAO,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAEf,IAAZ;AAAkB,QAAA,MAAM,MAAxB;AAAyB,QAAA,KAAK,EAAC,KAA/B;AAAqC,QAAA,MAAM,EAAC,KAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH;;;;EAjGsCH,S;;SAAtBE,a","sourcesContent":["import React, { Component } from 'react'\nimport {Line} from 'react-chartjs'\n//let LineChart = require('react-chartjs').Line\n\n    \nexport default class ProgressChart extends Component {\n\n    // constructor(props) {\n    //     super(props)\n    //     this.state = {\n    //         // type: 'line',\n    //         // data: {\n    //         //     //labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],\n    //         //     datasets: [{\n    //         //         label: 'Users Progress',\n    //         //         data: this.props.sums,\n    //         //         backgroundColor: [\n    //         //             'rgba(255, 99, 132, 0.2)',\n    //         //             'rgba(54, 162, 235, 0.2)',\n    //         //             'rgba(255, 206, 86, 0.2)',\n    //         //             'rgba(75, 192, 192, 0.2)',\n    //         //             'rgba(153, 102, 255, 0.2)',\n    //         //             'rgba(255, 159, 64, 0.2)'\n    //         //         ],\n    //         //         borderColor: [\n    //         //             'rgba(255, 99, 132, 1)',\n    //         //             'rgba(54, 162, 235, 1)',\n    //         //             'rgba(255, 206, 86, 1)',\n    //         //             'rgba(75, 192, 192, 1)',\n    //         //             'rgba(153, 102, 255, 1)',\n    //         //             'rgba(255, 159, 64, 1)'\n    //         //         ],\n    //         //         borderWidth: 1\n    //         //     }]\n    //         // },\n    //         data:  {\n    //             labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\"],\n    //             datasets: [\n    //                 {\n    //                     label: \"My First dataset\",\n    //                     fillColor: \"rgba(220,220,220,0.2)\",\n    //                     strokeColor: \"rgba(220,220,220,1)\",\n    //                     pointColor: \"rgba(220,220,220,1)\",\n    //                     pointStrokeColor: \"#fff\",\n    //                     pointHighlightFill: \"#fff\",\n    //                     pointHighlightStroke: \"rgba(220,220,220,1)\",\n    //                     data: this.props.sums\n    //                 },\n    //             ]\n    //         },\n    //         options: {\n    //             scales: {\n    //                 yAxes: [{\n    //                     ticks: {\n    //                         beginAtZero: true\n    //                     }\n    //                 }]\n    //             }\n    //         },\n    //         chartStyle: {\n    //             width: '100',\n    //             height: '100'\n    //         }\n    //     }\n    // }\n\n\n    // componentWillReceiveProps(nextProps) {\n    //     // const someData = {...this.state.data.datasets[0].data}\n    //     // booho = nextProps.sums\n    //     //     this.setState({booho});\n    //     //this.setState({updated: nextProps.updated});\n    //     this.setState({ data: { datasets: [{ data: nextProps.sums }] } })\n    //     // const ctx = document.getElementById('myChart');\n    //     // new Chart(ctx, this.state)\n\n    // }\n\n    // componentDidMount() {\n    // }\n\n    render() {\n        \n        var data = {\n            labels: this.props.survey.surveys.map(survey => {\n               return survey.date \n            }),\n            datasets: [\n                {\n                    label: \"My First dataset\",\n                    fillColor: \"green\",\n                    strokeColor: \"rgba(220,220,220,1)\",\n                    pointColor: \"rgba(220,220,220,1)\",\n                    pointStrokeColor: \"#fff\",\n                    pointHighlightFill: \"#fff\",\n                    pointHighlightStroke: \"rgba(220,220,220,1)\",\n                    data: this.props.survey.sums\n                },\n            ]\n        };\n\n        return <Line data={data} redraw width=\"600\" height=\"250\"/>\n    }\n}"]},"metadata":{},"sourceType":"module"}