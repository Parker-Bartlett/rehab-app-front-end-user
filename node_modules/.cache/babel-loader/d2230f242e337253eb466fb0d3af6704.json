{"ast":null,"code":"import _toConsumableArray from \"/home/parker-bartlett/wcci/code/rehab-application/rehab-app-front-end-user/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/home/parker-bartlett/wcci/code/rehab-application/rehab-app-front-end-user/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/parker-bartlett/wcci/code/rehab-application/rehab-app-front-end-user/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/parker-bartlett/wcci/code/rehab-application/rehab-app-front-end-user/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/parker-bartlett/wcci/code/rehab-application/rehab-app-front-end-user/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/parker-bartlett/wcci/code/rehab-application/rehab-app-front-end-user/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/parker-bartlett/wcci/code/rehab-application/rehab-app-front-end-user/src/components/Survey/AddSurvey/AddSurvey.js\";\nimport React, { Component } from \"react\";\nimport QuestionList from './QuestionList';\nimport QuestionChoiceList from './QuestionChoiceList';\nimport axios from \"axios\";\n\nvar AddSurvey =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AddSurvey, _Component);\n\n  function AddSurvey() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, AddSurvey);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AddSurvey)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      questions: [],\n      questionChoices: [],\n      addQuestionChecker: false\n    };\n\n    _this.addQuestionChoiceButton = function () {\n      var selectBox = document.querySelector(\".questionListChoice\");\n      var questionId = selectBox.options[selectBox.selectedIndex].value;\n      var questionName = selectBox.options[selectBox.selectedIndex].textContent;\n\n      _this.addQuestionChoice(questionId, questionName);\n    };\n\n    _this.addQuestionChoice = function (id, name) {\n      {\n        id === \"add\" && _this.setState({\n          addQuestionChecker: true\n        });\n      }\n      {\n        id !== \"add\" && _this.setState({\n          questionChoices: [].concat(_toConsumableArray(_this.state.questionChoices), [{\n            id: id,\n            name: name\n          }])\n        });\n      }\n    };\n\n    _this.removeQuestionChoice = function (specificQuestionName) {\n      _this.setState({\n        questionChoices: _toConsumableArray(_this.state.questionChoices.filter(function (questionChoice) {\n          return questionChoice.name !== specificQuestionName;\n        }))\n      });\n    };\n\n    _this.addQuestion = function (name) {\n      var newId;\n      axios.post(\"/questions/addQuestion\", {\n        name: name\n      }).then(function (res) {\n        return _this.setState({\n          questions: res.data\n        });\n      }).then(function () {\n        axios.post(\"/questions/nameToId\", {\n          name: name\n        }).then(function (res) {\n          newId = res.data;\n        });\n      }).then(function () {\n        console.log(newId);\n\n        _this.setState({\n          questionChoices: [].concat(_toConsumableArray(_this.state.questionChoices), [{\n            id: newId,\n            name: name\n          }]),\n          addQuestionChecker: false\n        });\n      });\n    };\n\n    _this.addSurveyButton = function () {\n      var name = document.querySelector(\".surveyName-input\").value;\n\n      _this.props.addSurvey(name, _this.state.questionChoices);\n    };\n\n    return _this;\n  }\n\n  _createClass(AddSurvey, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      axios.get(\"/questions\").then(function (res) {\n        return _this2.setState({\n          questions: res.data\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(\"div\", {\n        className: \"renderContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"survey\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"addSurveyTitle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"Add Survey\"), React.createElement(\"div\", {\n        className: \"surveyName\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \"Survey Name:\"), React.createElement(\"input\", {\n        className: \"surveyName-input\",\n        type: \"text\",\n        placeholder: \"Survey Name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"questionBox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(QuestionList, {\n        questions: this.state.questions,\n        addQuestionChoice: this.addQuestionChoice,\n        questionChoices: this.state.questionChoices,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"btnContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"genericButton\",\n        onClick: function onClick() {\n          return _this3.addQuestionChoiceButton();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \"Add Question Choice\"))), React.createElement(QuestionChoiceList, {\n        questionChoices: this.state.questionChoices,\n        removeQuestionChoice: this.removeQuestionChoice,\n        addQuestionChecker: this.state.addQuestionChecker,\n        addQuestion: this.addQuestion,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"btnContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"genericButton\",\n        onClick: function onClick() {\n          return _this3.addSurveyButton();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, \"Submit Survey\"))));\n    }\n  }]);\n\n  return AddSurvey;\n}(Component);\n\nexport { AddSurvey as default };","map":{"version":3,"sources":["/home/parker-bartlett/wcci/code/rehab-application/rehab-app-front-end-user/src/components/Survey/AddSurvey/AddSurvey.js"],"names":["React","Component","QuestionList","QuestionChoiceList","axios","AddSurvey","state","questions","questionChoices","addQuestionChecker","addQuestionChoiceButton","selectBox","document","querySelector","questionId","options","selectedIndex","value","questionName","textContent","addQuestionChoice","id","name","setState","removeQuestionChoice","specificQuestionName","filter","questionChoice","addQuestion","newId","post","then","res","data","console","log","addSurveyButton","props","addSurvey","get"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport QuestionList from './QuestionList';\nimport QuestionChoiceList from './QuestionChoiceList'\nimport axios from \"axios\"\n\nexport default class AddSurvey extends Component {\n\n  state = {\n    questions: [],\n    questionChoices: [],\n    addQuestionChecker: false\n  };\n\n  componentDidMount() {\n    axios.get(\"/questions\").then(res => this.setState({ questions: res.data }));\n  }\n\n  addQuestionChoiceButton = () => {\n    let selectBox = document.querySelector(\".questionListChoice\")\n    let questionId = selectBox.options[selectBox.selectedIndex].value;\n    let questionName = selectBox.options[selectBox.selectedIndex].textContent;\n    this.addQuestionChoice(questionId, questionName)\n  }\n\n  addQuestionChoice = (id, name) => {\n    { id === \"add\" && this.setState({ addQuestionChecker: true }) }\n    {\n    id !== \"add\" && (this.setState({\n      questionChoices: [...this.state.questionChoices, {\n        id: id,\n        name: name,\n      }]\n    }))\n    }\n\n  }\n\n  removeQuestionChoice = (specificQuestionName) => {\n    this.setState({\n      questionChoices: [...this.state.questionChoices.filter(questionChoice => questionChoice.name !== specificQuestionName)]\n    })\n  }\n\n  addQuestion = name => {\n    let newId\n    axios\n      .post(\"/questions/addQuestion\", { name})\n      .then(res => this.setState({ questions: res.data }))\n      .then(() => {axios\n      .post(\"/questions/nameToId\", { name})\n        .then(res => {newId = res.data })})\n      .then(() => {\n        console.log(newId)\n        this.setState({\n        questionChoices: [...this.state.questionChoices, {\n          id: newId,\n          name: name,\n        }],\n        addQuestionChecker: false\n       })})\n  }\n\n  addSurveyButton = () => {\n    let name = document.querySelector(\".surveyName-input\").value\n\n\n    this.props.addSurvey(name, this.state.questionChoices);\n  };\n\n  render() {\n    return (\n      <div className=\"renderContainer\">\n        <div className=\"survey\">\n          <h1 className=\"addSurveyTitle\">Add Survey</h1>\n          <div className=\"surveyName\">\n            <p>Survey Name:</p>\n            <input className=\"surveyName-input\" type=\"text\" placeholder=\"Survey Name\"></input>\n          </div>\n\n          <div className=\"questionBox\">\n            <QuestionList questions={this.state.questions} addQuestionChoice={this.addQuestionChoice}\n              questionChoices={this.state.questionChoices}\n            />\n            <div className=\"btnContainer\">\n              <button\n                className=\"genericButton\"\n                onClick={() => this.addQuestionChoiceButton()}\n              >Add Question Choice\n              </button>\n            </div>\n          </div>\n          <QuestionChoiceList questionChoices={this.state.questionChoices} removeQuestionChoice={this.removeQuestionChoice} addQuestionChecker={this.state.addQuestionChecker} addQuestion = {this.addQuestion} />\n\n          <div className=\"btnContainer\">\n            <button\n              className=\"genericButton\"\n              onClick={() => this.addSurveyButton()}\n            >Submit Survey\n              </button>\n          </div>\n\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}